services:

  customer:
    container_name: customer
    depends_on:
      - db
    build:
      context: ./customer
      dockerfile: Dockerfile
    image: customer:v1
    ports:
      - "8081:8081"
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: prueba
      DB_URL: jdbc:postgresql://db:5432/prueba
    networks:
      - my_network
    volumes:
      - ./log:/log
    restart: always

  customer-products-services:
    container_name: customer-products-services
    depends_on:
      - db
      - customer
    build:
      context: ./customer-products-services
      dockerfile: Dockerfile
    image: customer-products-services:v1
    ports:
      - "8080:8080"
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: prueba
      DB_URL: jdbc:postgresql://db:5432/prueba
    networks:
      - my_network
    volumes:
      - ./log:/log
    restart: always

  db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: prueba
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ini.sql:/docker-entrypoint-initdb.d/ini.sql
    networks:
      - my_network
    restart: always
      
volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge  